/dts-v1/;
/include/ "skeleton.dtsi"

/ {
	model = "Texas Instruments TCI6614 EVM";
	compatible = "ti,tci6614-evm";
	#address-cells = <1>;
	#size-cells = <1>;
	interrupt-parent = <&virtintc>;

	aliases {
		gpio0	= &gpio0;
	};

	chosen {
		bootargs = "console=ttyS0,115200n8 mem=512M rootwait=1 rw ubi.mtd=2,2048 rootfstype=ubifs root=ubi0:rootfs";
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x8000000>;
	};

	virtintc: interrupt-controller@48200000 {
		compatible = "ti,tci6614-intctrl";
		interrupt-controller;
		#interrupt-cells = <2>;
		#size-cells = <0>;
		#address-cells = <1>;
		reg = <0x48200000 0x2000
			0x02610000 0x2000
			0x0260c000 0x1000>;
	};
	
	droppolicies: default-drop-policies {
		no-drop {
			default;
			packet-units;
			limit = <0>;
		};
		tail-drop-64pkts {
			packet-units;
			limit = <64>;
		};
		tail-drop-100pkts {
			packet-units;
			limit = <100>;
		};
		tail-drop-32kb {
			byte-units;
			limit = <32768>;
		};
		tail-drop-64kb {
			byte-units;
			limit = <65536>;
		};
		red-32kb-128kb {
			byte-units;
			limit = <196608>;
			random-early-drop = <32768 131072 2 2000>;
		};
		red-32kb-64kb {
			byte-units;
			limit = <131072>;
			random-early-drop = <32768 65536 2 2000>;
		};
		all-drop {
			byte-units;
			limit = <0>;
		};
	};

	qostree: qos-tree {
		strict-priority;		/* or weighted-round-robin */
		byte-units;			/* packet-units or byte-units */
		output-rate = <31250000 25000>;
		overhead-bytes = <24>;		/* valid only if units are bytes */
		output-queue = <645>;		/* allowed only on root node */

		high-priority {
			byte-units;		/* packet-units or byte-units */
			priority = <0>;
			signaling {
				input-queues = <8046 8071>;
				stats-class  = "fastpath-hp";
				drop-policy = "no-drop";
			};
			linux-signaling {
				input-queues = <8077>;
				stats-class  = "linux-hp";
				drop-policy = "no-drop";
			};
		};

		wrr-aggregator {
			weighted-round-robin;
			priority = <1>;
			byte-units;			/* packet-units or byte-units */
			output-rate = <25000000 25000>;
			overhead-bytes = <24>;		/* valid only if units are bytes */
			wrr-cos0 {
				weighted-round-robin;		/* or weighted-round-robin */
				byte-units;			/* packet-units or byte-units */
				weight = <20>;
				overhead-bytes = <24>;		/* valid only if units are bytes */
				4g-cos0 {
					drop-policy = "tail-drop-32kb";
					weight = <5>;
					input-queues = <8010 8065>;
					stats-class  = "cos0";
				};
				3g-cos0 {
					drop-policy = "tail-drop-32kb";
					weight = <5>;
					input-queues = <8012>;
					stats-class  = "cos0";
				};
				wifi-cos0 {
					drop-policy = "tail-drop-32kb";
					weight = <5>;
					input-queues = <8014>;
					stats-class  = "cos0";
				};
				linux-cos0 {
					drop-policy = "tail-drop-32kb";
					weight = <5>;
					input-queues = <8073>;
					stats-class  = "linux-cos0";
				};
			};
			wrr-cos1 {
				weighted-round-robin;		/* or weighted-round-robin */
				byte-units;			/* packet-units or byte-units */
				weight = <40>;
				overhead-bytes = <24>;		/* valid only if units are bytes */
				4g-cos1 {
					drop-policy = "red-32kb-128kb";
					weight = <10>;
					input-queues = <8018 8066>;
					stats-class  = "cos1";
				};
				3g-cos1 {
					drop-policy = "red-32kb-128kb";
					weight = <10>;
					input-queues = <8020>;
					stats-class  = "cos1";
				};
				wifi-cos1 {
					drop-policy = "red-32kb-128kb";
					weight = <10>;
					input-queues = <8022>;
					stats-class  = "cos1";
				};
				linux-cos1 {
					drop-policy = "red-32kb-128kb";
					weight = <10>;
					input-queues = <8074>;
					stats-class  = "linux-cos1";
				};
			};
			wrr-cos2 {
				weighted-round-robin;		/* or weighted-round-robin */
				byte-units;			/* packet-units or byte-units */
				weight = <60>;
				overhead-bytes = <24>;		/* valid only if units are bytes */
				4g-cos2 {
					drop-policy = "red-32kb-64kb";
					weight = <15>;
					input-queues = <8026 8067>;
					stats-class  = "cos2";
				};
				3g-cos2 {
					drop-policy = "red-32kb-64kb";
					weight = <15>;
					input-queues = <8028>;
					stats-class  = "cos2";
				};
				wifi-cos2 {
					drop-policy = "red-32kb-64kb";
					weight = <15>;
					input-queues = <8030>;
					stats-class  = "cos2";
				};
				linux-cos2 {
					drop-policy = "red-32kb-64kb";
					weight = <15>;
					input-queues = <8075>;
					stats-class  = "linux-cos2";
				};
			};
			wrr-cos3 {
				weighted-round-robin;		/* or weighted-round-robin */
				byte-units;			/* packet-units or byte-units */
				weight = <80>;
				overhead-bytes = <24>;		/* valid only if units are bytes */
				4g-cos3 {
					drop-policy = "tail-drop-64kb";
					weight = <20>;
					input-queues = <8034 8068>;
					stats-class  = "cos3";
				};
				3g-cos3 {
					drop-policy = "tail-drop-64kb";
					weight = <20>;
					input-queues = <8036>;
					stats-class  = "cos3";
				};
				wifi-cos3 {
					drop-policy = "tail-drop-64kb";
					weight = <20>;
					input-queues = <8038>;
					stats-class  = "cos3";
				};
				linux-cos3 {
					drop-policy = "tail-drop-64kb";
					weight = <20>;
					input-queues = <8076>;
					stats-class  = "linux-cos3";
				};
			};
		};

		best-effort {
			byte-units;		/* packet-units or byte-units */
			priority = <2>;
			drop-policy = "tail-drop-64kb";
			fastpath-best-effort {
				// queues between 8000 to 8063 not assigned
				// in the above nodes are assigned below as
				// unclassified DSCP values
				// queues between 8064 to 8071 not assigned
				// in the above nodes are assigned below as
				// unclassified VLAN p-bit values
				input-queues = <8000 8001 8002 8003 8004 
						8005 8006 8007 8008 8009 8011 
						8013 8015 8016 8017 8019 8021
						8023 8024 8025 8027 8029 8031 
						8032 8033 8035 8037 8039 8040 
						8041 8042 8043 8044 8045 8047 
						8048 8049 8050 8051 8052 8053 
						8054 8055 8056 8057 8058 8059
						8060 8061 8062 8063 
						8064 8069 8070>; 
				stats-class  = "fastpath-be";
			};
			linux-best-effort {
				input-queues = <8072>;
				stats-class  = "linux-be";
			};
		};
	};

	soc6614@2000000 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "simple-bus", "ti,tci6614-bus";
		ranges;

		rstctrl:rstctrl@23100e8 {
			compatible = "ti,keystone-reset";
			reg = <0x023100e8 4	/* pll reset control */
				0x02620318 4>;	/* rstmux8 register */
		};

		clocks {
			#address-cells = <1>;
			#size-cells = <1>;
			ranges;

			refclk: refclk {
				#clock-cells = <0>;
				compatible = "fixed-clock";
				clock-frequency = <122880000>;
			};

			mainpllclk: mainpllclk@2310110 {
				#clock-cells = <0>;
				compatible = "keystone,main-pll-clk";
				clocks = <&refclk>;
				reg = <0x02310110 4	/* PLLCTRL PLLM */
					0x02620328 4>;	/* MAINPLL_CTL0 */
				pll_has_pllctrl;
				pllm_lower_mask	= <0x3f>;
				pllm_upper_mask = <0x7f000>;
				pllm_upper_shift = <6>;
				plld_mask = <0x3f>;
				fixed_postdiv = <2>;
			};

			mainmuxclk: mainmuxclk@2310108 {
				#clock-cells = <0>;
				compatible = "davinci,main-pll-mux-clk";
				clocks = <&mainpllclk>, <&refclk>;
				reg = <0x02310108 4>;
				shift = <23>;
				width = <1>;
			};

			chipclk1: chipclk1@2310118 {
				#clock-cells = <0>;
				compatible = "davinci,pll-divider-clk";
				clocks = <&mainmuxclk>;
				reg = <0x02310118 4>;
				shift = <0>;
				width = <8>;
			};

			gemtraceclk: gemtraceclk@231011c {
				#clock-cells = <0>;
				compatible = "davinci,pll-divider-clk";
				clocks = <&mainmuxclk>;
				reg = <0x0231011c 4>;
				shift = <0>;
				width = <8>;
			};

			chipclk2: chipclk2@2310120 {
				#clock-cells = <0>;
				compatible = "davinci,pll-divider-clk";
				clocks = <&mainmuxclk>;
				reg = <0x02310120 4>;
				shift = <0>;
				width = <8>;
			};

			chipclk3: chipclk3@2310160 {
				#clock-cells = <0>;
				compatible = "davinci,pll-divider-clk";
				clocks = <&mainmuxclk>;
				reg = <0x02310160 4>;
				shift = <0>;
				width = <8>;
			};

			stmclk: stmclk@2310164 {
				#clock-cells = <0>;
				compatible = "davinci,pll-divider-clk";
				clocks = <&mainmuxclk>;
				reg = <0x02310164 4>;
				shift = <0>;
				width = <8>;
			};

			emifptvclk: emifptvclk@2310168 {
				#clock-cells = <0>;
				compatible = "davinci,pll-divider-clk";
				clocks = <&mainmuxclk>;
				reg = <0x02310168 4>;
				shift = <0>;
				width = <8>;
			};

			chipclk6: chipclk6@231016c {
				#clock-cells = <0>;
				compatible = "davinci,pll-divider-clk";
				clocks = <&mainmuxclk>;
				reg = <0x0231016c 4>;
				shift = <0>;
				width = <8>;
			};

			slowsysclk: slowsysclk@2310170 {
				#clock-cells = <0>;
				compatible = "davinci,pll-divider-clk";
				clocks = <&mainmuxclk>;
				reg = <0x02310170 4>;
				shift = <0>;
				width = <8>;
			};

			chipsmreflexclk: chipsmreflexclk@2310174 {
				#clock-cells = <0>;
				compatible = "davinci,pll-divider-clk";
				clocks = <&mainmuxclk>;
				reg = <0x02310174 4>;
				shift = <0>;
				width = <8>;
			};

			chipclk3srio: chipclk3srio@2310178 {
				#clock-cells = <0>;
				compatible = "davinci,pll-divider-clk";
				clocks = <&mainmuxclk>;
				reg = <0x02310178 4>;
				shift = <0>;
				width = <8>;
			};

			pscclk6: pscclk6@231017c {
				#clock-cells = <0>;
				compatible = "davinci,pll-divider-clk";
				clocks = <&mainmuxclk>;
				reg = <0x0231017c 4>;
				shift = <0>;
				width = <8>;
			};

			chipdftclk4: chipdftclk4@2310180 {
				#clock-cells = <0>;
				compatible = "davinci,pll-divider-clk";
				clocks = <&mainmuxclk>;
				reg = <0x02310180 4>;
				shift = <0>;
				width = <8>;
			};

			chipdftclk8: chipdftclk8@2310184 {
				#clock-cells = <0>;
				compatible = "davinci,pll-divider-clk";
				clocks = <&mainmuxclk>;
				reg = <0x02310184 4>;
				shift = <0>;
				width = <8>;
			};

			clkmodrst0: clkmodrst0 {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk6>;
				clock-output-names = "modrst0";
				status = "enabled";
				reg = <0x02350000 4096>;
			};

			clksrc3pwr: clksrc3pwr {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipsmreflexclk>;
				clock-output-names = "src3_pwr";
				status = "enabled";
				reg = <0x02350000 4096>;
				lpsc = <1>;
			};

			clkemif4f: clkemif4f {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk1>;
				clock-output-names = "emif4f";
				status = "enabled";
				reg = <0x02350000 4096>;
				lpsc = <2>;
			};

			clkvusr: clkvusr {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk2>;
				clock-output-names = "vusr";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <3>;
			};

			clkvcp2a: clkvcp2a {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk2>;
				clock-output-names = "vcp2_a";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <4>;
			};

			clkdebugsstrc: clkdebugsstrc {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk3>;
				clock-output-names = "debugss_trc";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <5>;
				pd = <1>;
			};

			clktetbtrc: clktetbtrc {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk3>;
				clock-output-names = "tetb_trc";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <6>;
				pd = <1>;
			};

			clkpktproc: clkpktproc {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk3>;
				clock-output-names = "pktproc";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <7>;
				pd = <2>;
			};

			clkethss: clkethss {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&clkpktproc>;
				clock-output-names = "ethss";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <8>;
				pd = <2>;
			};

			clkcrypto: clkcrypto {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk1>;
				clock-output-names = "crypto";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <9>;
				pd = <2>;
			};

			clkpciex: clkpciex {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk2>;
				clock-output-names = "pciex";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <10>;
				pd = <3>;
			};

			clksrio: clksrio {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk3srio>;
				clock-output-names = "srio";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <11>;
				pd = <4>;
			};

			clkbcp: clkbcp {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk3>;
				clock-output-names = "bcp";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <12>;
				pd = <5>;
			};

			clkmonzarstctrl: clkmonzarstctrl {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk1>;
				clock-output-names = "monzai_rst_ctrl";
				base-flags = "ignore-unused";
				status = "enabled";
				reg = <0x02350000 4096>;
				lpsc = <13>;
			};

			clkmsmcsram: clkmsmcsram {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk2>;
				clock-output-names = "msmcsram";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <14>;
				pd = <7>;
			};

			clkrac: clkrac {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk1>;
				clock-output-names = "rac";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <15>;
				pd = <8>;
			};

			clktac: clktac {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk3>;
				clock-output-names = "tac";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <16>;
				pd = <8>;
			};

			clkfftc: clkfftc {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk3>;
				clock-output-names = "fftc";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <17>;
				pd = <9>;
			};

			clkaif2: clkaif2 {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk3>;
				clock-output-names = "aif2";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <18>;
				pd = <10>;
			};

			clktcp3d: clktcp3d {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk2>;
				clock-output-names = "tcp3d";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <19>;
				pd = <11>;
			};

			clkvcp2b: clkvcp2b {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk3>;
				clock-output-names = "vcp2_b";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <20>;
				pd = <12>;
			};

			clkvcp2c: clkvcp2c {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk3>;
				clock-output-names = "vcp2_c";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <21>;
				pd = <12>;
			};

			clkvcp2d: clkvcp2d {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk3>;
				clock-output-names = "vcp2_d";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <22>;
				pd = <12>;
			};

			clkgem0: clkgem0 {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk1>;
				clock-output-names = "gem0";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <23>;
				pd = <13>;
				ti,psc-lreset;
			};

			clkgem1: clkgem1 {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk1>;
				clock-output-names = "gem1";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <24>;
				pd = <14>;
				ti,psc-lreset;
			};

			clkgem2: clkgem2 {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk1>;
				clock-output-names = "gem2";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <26>;
				pd = <15>;
				ti,psc-lreset;
			};

			clkgem3: clkgem3 {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk1>;
				clock-output-names = "gem3";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <28>;
				pd = <16>;
				ti,psc-lreset;
			};

			clkrsax21: clkrsax21 {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk1>;
				clock-output-names = "rsax2_1";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <25>;
				pd = <14>;
			};

			clkrsax20: clkrsax20 {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk1>;
				clock-output-names = "rsax2_0";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <27>;
				pd = <15>;
			};

			clktcp3db: clktcp3db {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&chipclk2>;
				clock-output-names = "tcp3d_b";
				base-flags = "ignore-unused";
				reg = <0x02350000 4096>;
				lpsc = <29>;
				pd = <17>;
			};

			clktimer0: clktimer0 {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&clkmodrst0>;
				clock-output-names = "timer0";
				status = "enabled";
				reg = <0x02350000 4096>;
			};

			clktimer1: clktimer1 {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&clkmodrst0>;
				clock-output-names = "timer1";
				status = "enabled";
				reg = <0x02350000 4096>;
			};

			clkuart0: clkuart0 {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&clkmodrst0>;
				clock-output-names = "uart0";
				status = "enabled";
				reg = <0x02350000 4096>;
			};

			clkuart1: clkuart1 {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&clkmodrst0>;
				clock-output-names = "uart1";
				status = "enabled";
				reg = <0x02350000 4096>;
			};

			clkaemif: clkaemif {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&clkmodrst0>;
				clock-output-names = "aemif";
				status = "enabled";
				reg = <0x02350000 4096>;
			};

			clkusim: clkusim {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&clkmodrst0>;
				clock-output-names = "usim";
				status = "enabled";
				reg = <0x02350000 4096>;
			};

			clki2c: clki2c {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&clkmodrst0>;
				clock-output-names = "i2c";
				status = "enabled";
				reg = <0x02350000 4096>;
			};

			clkspi: clkspi {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&clkmodrst0>;
				clock-output-names = "spi";
				status = "enabled";
				reg = <0x02350000 4096>;
			};

			clkgpio: clkgpio {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&clkmodrst0>;
				clock-output-names = "gpio";
				status = "enabled";
				reg = <0x02350000 4096>;
			};

			clkkeymgr: clkkeymgr {
				#clock-cells = <0>;
				compatible = "davinci,psc-clk";
				clocks = <&clkmodrst0>;
				clock-output-names = "keymgr";
				status = "enabled";
				reg = <0x02350000 4096>;
			};

		};

		hwqueue0: hwqueue@2a00000 {
			compatible = "ti,keystone-hwqueue";
			#address-cells = <1>;
			#size-cells = <1>;
			ranges;
			reg		= <0x2a00000 0xc0000>;
			range		= <0 0x2000>;
			linkram0	= <0x80000 0x4000>;
			linkram1	= <0x0 0x10000>;

			qmgrs {
				#address-cells = <1>;
				#size-cells = <1>;
				ranges;
				qmgr0 {
					managed-queues = <0 0x2000>;	/* managed queues */
					reg = <0x2a00000 0x20000	/* 0 - peek	*/
					       0x2a62000 0x6000		/* 1 - status	*/
					       0x2a68000 0x2000		/* 2 - config	*/
					       0x2a6a000 0x4000		/* 3 - region	*/
					       0x2a20000 0x20000	/* 4 - push	*/
					       0x2a20000 0x20000>;	/* 5 - pop	*/
				};
			};

			queues {
				qpend-arm {
					values = <650 8>;
					interrupts = <41 0xf01 42 0xf01 43 0xf01 44 0xf01
						      45 0xf01 46 0xf01 47 0xf01 48 0xf01>;
					reserved;
				};
				general {
					values = <4000 64>;
				};
				pa {
					values = <640 9>;
					reserved;
				};
				infradma {
					values = <800 12>;
					reserved;
				};
				accumulator-low-0 {
					values = <0 32>;
					// pdsp-id, channel, entries, pacing mode, latency
					accumulator = <0 32 8 2 0>;
					interrupts = <363 0xf01>;
					multi-queue;
					reserved;
				};
				accumulator-low-1 {
					values = <32 32>;
					// pdsp-id, channel, entries, pacing mode, latency
					accumulator = <0 33 8 2 0>;
					interrupts = <364 0xf01>;
					multi-queue;
				};
				accumulator-low-2 {
					values = <64 32>;
					// pdsp-id, channel, entries, pacing mode, latency
					accumulator = <0 34 8 2 0>;
					interrupts = <365 0xf01>;
					multi-queue;
				};
				accumulator-low-3 {
					values = <96 32>;
					// pdsp-id, channel, entries, pacing mode, latency
					accumulator = <0 35 8 2 0>;
					interrupts = <366 0xf01>;
					multi-queue;
				};
				accumulator-high {
					values = <728 8>;
					// pdsp-id, channel, entries, pacing mode, latency
					accumulator = <0 20 8 2 0>;
					interrupts = <150 0xf01 151 0xf01 152 0xf01 153 0xf01
						      154 0xf01 155 0xf01 156 0xf01 157 0xf01>;
					reserved;
				};
				qos-inputs {
					values			= <8000 192>;
					pdsp-id			= <1>;
					ticks-per-sec		= <10000>;
					qos-cfg			= <4 50 1 1 0xf00 0 0>;
					sched-port-configs	= <0 20 0x1c8>;
					drop-out-profiles	= <0 36 0xc>;
					drop-cfg-profiles	= <0 8 0x14>;
					drop-queue-configs	= <0 80 0x4>;
					statistics-profiles	= <0 48>;
					drop-policies		= <&droppolicies>;
					qos-tree		= <&qostree>;
					reserved;
				};
				riotx {
					values = <672 1>;
					reserved;
				};
			};
			regions {
				#address-cells = <1>;
				#size-cells = <1>;
				ranges;
				region-12 {
					id = <12>;
					values	= <2048 128>;	/* num_desc desc_size */
					link-index = <0x4000>;
				};
				region-13 {
					id = <13>;
					values	= <2048 256>;	/* num_desc desc_size */
					link-index = <0x4800>;
				};
			};
			descriptors {
				pool-net {
					values = <2048 128>;	/* num_desc desc_size */
					region-id = <12>;
				};
				pool-rio {
					values = <128 256>;
					region-id = <13>;
				};
				pool-udma {
					values = <1636 256>;	/* num_desc desc_size */
					region-id = <13>;
				};
			};
			pdsps {
				#address-cells = <1>;
				#size-cells = <1>;
				ranges;
				pdsp0@0x2a60000 {
					firmware = "keystone/qmss_pdsp_acc48_le_1_0_3_12.fw";
					reg = <0x2a60000 0x1000    /*iram */
					       0x2a6e000 0x1000    /*reg*/
					       0x2aa0000 0x3c8	   /*intd */
					       0x2ab8000 0x4000>;  /*cmd*/
					id = <0>;
				};
				pdsp1@0x2a61000 {
					firmware = "keystone/qmss_qos.fw";
					reg = <0x2a61000 0x1000    /*iram */
					       0x2a6f000 0x1000    /*reg*/
					       0x2aa0000 0x3c8	   /*intd */
					       0x2abc000 0x4000>;  /*cmd*/
					id = <1>;
				};
			};
		};

		virtio-infradma@2a6c000 {
			compatible = "ti,virtio-keystone";
			reg = <0x2a6c000 0x100		/* 0 - global  */
			       0x2a6c400 0x400		/* 1 - txchan  */
			       0x2a6c800 0x400		/* 2 - rxchan  */
			       0x2a6cc00 0x080		/* 3 - txsched */
			       0x2a6d000 0x400>;	/* 4 - rxflow  */
			clocks = <&clkmodrst0>;
			loop-back;
			/* big-endian; */
			enable-all;
			debug;
			/* rx-priority = <0>; */
			/* tx-priority = <0>; */
			queue-managers = <0x34020000 0x34030000>;

			udma0 {
				id = <10>;
				udmatx0 {
					transmit;
					label		= "udmatx0";
					pool		= "pool-udma";
					submit-queue	= <800>;
					complete-queue  = <0>;
					/* debug; */
					channel		= <0>;
					priority	= <1>;
					flowtag		= <0>;
				};
				udmatx1 {
					transmit;
					label		= "udmatx1";
					pool		= "pool-udma";
					submit-queue	= <801>;
					complete-queue  = <1>;
					/* debug; */
					channel		= <1>;
					priority	= <1>;
					flowtag		= <1>;
				};
				udmatx2 {
					transmit;
					label		= "udmatx2";
					pool		= "pool-udma";
					submit-queue	= <802>;
					complete-queue  = <2>;
					/* debug; */
					channel		= <2>;
					priority	= <1>;
					flowtag		= <2>;
				};
				udmatx3 {
					transmit;
					label		= "udmatx3";
					pool		= "pool-udma";
					submit-queue	= <803>;
					complete-queue  = <3>;
					/* debug; */
					channel		= <3>;
					priority	= <1>;
					flowtag		= <3>;
				};
				udmatx4 {
					transmit;
					label		= "udmatx4";
					pool		= "pool-udma";
					submit-queue	= <804>;
					complete-queue  = <4>;
					/* debug; */
					channel		= <4>;
					priority	= <1>;
					flowtag		= <4>;
				};
				udmatx5 {
					transmit;
					label		= "udmatx5";
					pool		= "pool-udma";
					submit-queue	= <805>;
					complete-queue  = <5>;
					/* debug; */
					channel		= <5>;
					priority	= <1>;
					flowtag		= <5>;
				};
				udmatx6 {
					transmit;
					label		= "udmatx6";
					pool		= "pool-udma";
					submit-queue	= <806>;
					complete-queue  = <6>;
					/* debug; */
					channel		= <6>;
					priority	= <1>;
					flowtag		= <6>;
				};
				udmatx7 {
					transmit;
					label		= "udmatx7";
					pool		= "pool-udma";
					submit-queue	= <807>;
					complete-queue  = <7>;
					/* debug; */
					channel		= <7>;
					priority	= <1>;
					flowtag		= <7>;
				};
				udmatx8 {
					transmit;
					label		= "udmatx8";
					pool		= "pool-udma";
					submit-queue	= <808>;
					complete-queue  = <8>;
					/* debug; */
					channel		= <8>;
					priority	= <1>;
					flowtag		= <8>;
				};
				udmatx9 {
					transmit;
					label		= "udmatx9";
					pool		= "pool-udma";
					submit-queue	= <809>;
					complete-queue  = <9>;
					/* debug; */
					channel		= <9>;
					priority	= <1>;
					flowtag		= <9>;
				};
				udmatx10 {
					transmit;
					label		= "udmatx10";
					pool		= "pool-udma";
					submit-queue	= <810>;
					complete-queue  = <10>;
					/* debug; */
					channel		= <10>;
					priority	= <1>;
					flowtag		= <10>;
				};
				udmatx11 {
					transmit;
					label		= "udmatx11";
					pool		= "pool-udma";
					submit-queue	= <811>;
					complete-queue  = <11>;
					/* debug; */
					channel		= <11>;
					priority	= <1>;
					flowtag		= <11>;
				};
				udmarx0 {
					receive;
					label		= "udmarx0";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <16>;
					/* debug; */
					channel		= <0>;
					flow		= <0>;
				};
				udmarx1 {
					receive;
					label		= "udmarx1";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <17>;
					/* debug; */
					channel		= <1>;
					flow		= <1>;
				};
				udmarx2 {
					receive;
					label		= "udmarx2";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <18>;
					/* debug; */
					channel		= <2>;
					flow		= <2>;
				};
				udmarx3 {
					receive;
					label		= "udmarx3";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <19>;
					/* debug; */
					channel		= <3>;
					flow		= <3>;
				};
				udmarx4 {
					receive;
					label		= "udmarx4";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <20>;
					/* debug; */
					channel		= <4>;
					flow		= <4>;
				};
				udmarx5 {
					receive;
					label		= "udmarx5";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <21>;
					/* debug; */
					channel		= <5>;
					flow		= <5>;
				};
				udmarx6 {
					receive;
					label		= "udmarx6";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <22>;
					/* debug; */
					channel		= <6>;
					flow		= <6>;
				};
				udmarx7 {
					receive;
					label		= "udmarx7";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <23>;
					/* debug; */
					channel		= <7>;
					flow		= <7>;
				};
				udmarx8 {
					receive;
					label		= "udmarx8";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <24>;
					/* debug; */
					channel		= <8>;
					flow		= <8>;
				};
				udmarx9 {
					receive;
					label		= "udmarx9";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <25>;
					/* debug; */
					channel		= <9>;
					flow		= <9>;
				};
				udmarx10 {
					receive;
					label		= "udmarx10";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <26>;
					/* debug; */
					channel		= <10>;
					flow		= <10>;
				};
				udmarx11 {
					receive;
					label		= "udmarx11";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <27>;
					/* debug; */
					channel		= <11>;
					flow		= <11>;
				};
			};
		};

		padma: pktdma@2004000 {
			compatible = "ti,keystone-pktdma";
			reg = <0x2004000 0x100		/* 0 - global  */
			       0x2004400 0x120		/* 1 - txchan  */
			       0x2004800 0x300		/* 2 - rxchan  */
			       0x2004c00 0x120		/* 3 - txsched */
			       0x2005000 0x400>;	/* 4 - rxflow  */
			clocks = <&clkpktproc>;
			/* loop-back;  */
			/* bigendian; */
			enable-all;
			/* debug; */
			/* rx-priority = <0>; */
			/* tx-priority = <0>; */
			logical-queue-managers	= <2>;
			queues-per-queue-manager = <4096>;
			qm-base-address = <0x34020000 0x34030000>;

			channels {
				nettx0 {
					transmit;
					label		= "nettx0";
					pool		= "pool-net";
					submit-queue	= <648>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <0>; */
					/* priority = <1>; */
				};
				nettx1 {
					transmit;
					label		= "nettx1";
					pool		= "pool-net";
					submit-queue	= <648>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <0>; */
					/* priority = <1>; */
				};
				netrx0 {
					receive;
					label		= "netrx0";
					pool		= "pool-net";
					/* submit-queue   = <xx>; */
					complete-queue = <650>;
					/* debug; */
					/* channel = <0>; */
					flow		= <23>;
				};
				netrx1 {
					receive;
					label		= "netrx1";
					pool		= "pool-net";
					/* submit-queue   = <xx>; */
					complete-queue = <651>;
					/* debug; */
					/* channel = <0>; */
					flow		= <22>;
				};
				satx {
					transmit;
					label		= "satx";
					pool		= "pool-net";
					submit-queue	= <646>;
				};
				patx-pdsp0 {
					transmit;
					label		= "patx-pdsp0";
					pool		= "pool-net";
					submit-queue	= <640>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <xx>; */
					/* priority = <1>; */
				};
				patx-pdsp5-0 {
					transmit;
					label		= "patx-pdsp5-0";
					pool		= "pool-net";
					submit-queue	= <645>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <xx>; */
					/* priority = <1>; */
				};
				patx-pdsp5-1 {
					transmit;
					label		= "patx-pdsp5-1";
					pool		= "pool-net";
					submit-queue	= <645>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <xx>; */
					/* priority = <1>; */
				};
				parx {
					receive;
					label		= "parx";
					pool		= "pool-net";
					/* submit-queue   = <xx>; */
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <0>; */
					flow		= <31>;
				};
				qos0 {
					transmit;
					label		= "qos0";
					pool		= "pool-net";
					submit-queue	= <8072>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <xx>; */
					/* priority = <1>; */
				};
				qos1 {
					transmit;
					label		= "qos1";
					pool		= "pool-net";
					submit-queue	= <8073>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <xx>; */
					/* priority = <1>; */
				};
				qos2 {
					transmit;
					label		= "qos2";
					pool		= "pool-net";
					submit-queue	= <8074>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <xx>; */
					/* priority = <1>; */
				};
				qos3 {
					transmit;
					label		= "qos3";
					pool		= "pool-net";
					submit-queue	= <8075>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <xx>; */
					/* priority = <1>; */
				};
				qos4 {
					transmit;
					label		= "qos4";
					pool		= "pool-net";
					submit-queue	= <8076>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <xx>; */
					/* priority = <1>; */
				};
				qos5 {
					transmit;
					label		= "qos5";
					pool		= "pool-net";
					submit-queue	= <8077>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <xx>; */
					/* priority = <1>; */
				};
			};
		};

		riodma: pktdma@2901000 {
			compatible = "ti,keystone-pktdma";
			reg = <0x2901000 0x100		/* 0 - global  */
			       0x2901400 0x200		/* 1 - txchan  */
			       0x2901800 0x200		/* 2 - rxchan  */
			       0x2901c00 0x200		/* 3 - txsched */
			       0x2902000 0x300>;	/* 4 - rxflow  */
			clocks = <&clkpktproc>;
			enable-all;

			logical-queue-managers	= <2>;
			queues-per-queue-manager = <4096>;
			qm-base-address = <0x34020000 0x34030000>;

			channels {
				riotx {
					transmit;
					label		= "riotx";
					pool		= "pool-rio";
					submit-queue	= <672>;
					/*complete-queue	= <657>;*/
					/*debug;*/
				};
				riorx {
					receive;
					label		= "riorx";
					pool		= "pool-rio";
					complete-queue	= <653>;
					flow		= <21>;
				};
			};
		};

		mdio: mdio@2090300 {
			compatible	= "ti,davinci_mdio";
			reg		= <0x2090300 0x100>;
			bus-freq	= <50000000>;
			clocks		= <&clkethss>;
			clock-names	= "fck";
		};

		udma0 {
			compatible = "ti,keystone-udma";
		};

		netcp: netcp@2090000 {
			reg = <0x2090000 0xf00
				0x2620110 0x8>;
			compatible = "ti,keystone-netcp";

			clocks = <&clkpktproc>, <&clkethss>;
			clock-names = "clk_pa", "clk_cpgmac";

			interfaces {
				interface-0 {
					rx-channel = "netrx0";
					rx-queue-depth = <128 128 0 0>;
					rx-buffer-size = <1500 4096 0 0>;
					efuse-mac = <1>;
				};
			};

			cpsw: cpsw@2090000 {
				label = "keystone-cpsw";

				intf_tx_queues = <6>;

				sgmii_module_ofs  = <0x100>;
				switch_module_ofs = <0x800>;
				host_port_reg_ofs = <0x834>;
				slave_reg_ofs	  = <0x860>;
				sliver_reg_ofs	  = <0x900>;
				hw_stats_reg_ofs  = <0xb00>;
				ale_reg_ofs	  = <0xe00>;

				num_slaves  = <2>;
				ale_ageout  = <10>;
				ale_entries = <1024>;
				ale_ports   = <3>;

				/* multi-interface; */
				num-interfaces = <1>;
				slaves-per-interface = <2>;

				interfaces {
					interface-0 {
						slave_port = <0>;
						tx-channel = "nettx0";
						tx_queue_depth = <32>;
						intf_tx_queues = <6>;
					};
				};

				slaves {
					slave0 {
						label		= "slave0";
						link-interface	= <2>;
					};
					slave1 {
						label		= "slave1";
						link-interface	= <1>;
					};
				};
			};
			pa: pa@2000000 {
				label = "keystone-pa";
				checksum-offload	= <2>;
				txhook-order		= <10>;
				txhook-softcsum		= <40>;
				rxhook-order		= <10>;

				tx_cmd_queue_depth	= <32>;
				tx_data_queue_depth	= <32>;
				rx_pool_depth		= <32>;
				rx_buffer_size		= <128>;
				lut-ranges		= < 0 43 56 63>;
			};
			qos: qos@0 {
				label = "keystone-qos";

				/* multi-interface; */
				interface-0;

				input-channels {
					chan-0 {
						tx-channel = "qos0";
						tx_queue_depth = <128>;
					};
					chan-1 {
						tx-channel = "qos1";
						tx_queue_depth = <128>;
					};
					chan-2 {
						tx-channel = "qos2";
						tx_queue_depth = <128>;
					};
					chan-3 {
						tx-channel = "qos3";
						tx_queue_depth = <128>;
					};
					chan-4 {
						tx-channel = "qos4";
						tx_queue_depth = <128>;
					};
					chan-5 {
						tx-channel = "qos5";
						tx_queue_depth = <128>;
					};
				};
			};
			sa: pa@20c0000 {
				label = "keystone-sa";

				/* multi-interface; */
				interface-0;

				tx-channel = "satx";
				tx_queue_depth = <32>;
			};
		};

		crypto: crypto@20c0000 {
			compatible = "ti,keystone-crypto";
			reg = <0x20c0000 0x40000>;
			clocks = <&clkcrypto>;
		};

		ipcirq: ipcirq@26202bc {	/* ipc irq chip */
			compatible = "ti,keystone-ipc-irq";
			reg  = <0x026202bc 4	/* host ack register */
			        0x0262027c 4>;	/* ipc host interrupt generation register */
			interrupts = <129 0xf01>;/* it should match the value in irqs.h */
						 /* following is the source id to irq mapping
						   SRCS0 <-> ipc hw irq 0 ... SRCS27 <-> ipc hw irq 27
						   note that SRCS0 is bit 4 in ipc register */
			interrupt-controller;
			#interrupt-cells = <2>;
		};

		dsp0 {
			compatible = "linux,rproc-user";
			reg = <0x02620040 4
			       0x0235085c 4
			       0x02350a5c 4
			       0x02620240 4
			       0x10800000 0x00100000>;
			reg-names = "boot-address", "psc-mdstat", "psc-mdctl", "ipcgr", "l2ram";
			interrupt-parent = <&ipcirq>;
			interrupts = <4 0 0 0>;
			kick-gpio = <&ipcgpio0 27 0>;
			clocks = <&clkgem0>;
		};

		dsp1 {
			compatible = "linux,rproc-user";
			reg = <0x02620044 4
			       0x02350860 4
			       0x02350a60 4
			       0x02620244 4
			       0x20800000 0x00100000>;
			reg-names = "boot-address", "psc-mdstat", "psc-mdctl", "ipcgr", "l2ram";
			interrupts = <5 0 1 0>;
			kick-gpio = <&ipcgpio1 27 0>;
			clocks = <&clkgem1>;
		};

		dsp2 {
			compatible = "linux,rproc-user";
			reg = <0x02620048 4
			       0x02350a68 4
			       0x02620248 4
			       0x30800000 0x00100000>;
			reg-names = "boot-address", "psc-mdstat", "psc-mdctl", "ipcgr", "l2ram";
			interrupts = <6 0 2 0>;
			kick-gpio = <&ipcgpio2 27 0>;
			clocks = <&clkgem2>;
		};

		dsp3 {
			compatible = "linux,rproc-user";
			reg = <0x0262004c 4
			       0x02350a70 4
			       0x0262024c 4
			       0x40800000 0x00100000>;
			reg-names = "boot-address", "psc-mdstat", "psc-mdctl", "ipcgr", "l2ram";
			interrupts = <7 0 3 0>;
			kick-gpio = <&ipcgpio3 27 0>;
			clocks = <&clkgem3>;
		};

		dspmem {
			compatible = "linux,uio";
			reg  = <0x0c000000 0x00200000	/* msmc ram */
				0xa0000000 0x20000000>;	/* corepac's ddr3 */
			reg-names = "msmcram", "ddr3";
		};

		rapidio: rapidio@2900000 {
			#address-cells = <1>;
			#size-cells = <1>;
			reg = <0x2900000 0x21000               /* rio regs */
                               0x2620000 0x3b0>;               /* boot config regs */
			clocks = <&clksrio>;
			clock-names = "clk_srio";
			compatible = "ti,keystone-rapidio";

			tx_channel = "riotx";
			tx_queue_depth = <32>;

			rx_channel = "riorx";
			rx_queue_depth	= <64 0 0 0>;
			rx_buffer_size	= <4096 0 0 0>;

                        ports = <0x1>;      /* bitfield of port(s) to probe on this controller */
                        dev-id-size = <0>;  /* RapidIO common transport system size.
			                     * 0 - Small size. 8-bit deviceID fields. 256 devices.
                                             * 1 - Large size, 16-bit deviceID fields. 65536 devices. */
		};

		aemif@70000000 {
			compatible = "ti,davinci-aemif";
			#address-cells = <2>;
			#size-cells = <1>;
			reg = <0x20c00000 0x100>;
			ranges = <2 0 0x70000000 0x08000000
				3 0 0x74000000 0x04000000
				4 0 0x78000000 0x04000000
				5 0 0x7C000000 0x04000000
				6 0 0x20c00000 0x100>;
			clocks = <&clkaemif>;
			clock-names = "aemif";

			nand_cs:cs2@70000000 {
				compatible = "ti,davinci-cs";
				#address-cells = <1>;
				#size-cells = <1>;
				/* all timings in nanoseconds */
				ti,davinci-cs-ta = <24>;
				ti,davinci-cs-rhold = <48>;
				ti,davinci-cs-rstrobe = <390>;
				ti,davinci-cs-rsetup = <96>;
				ti,davinci-cs-whold = <48>;
				ti,davinci-cs-wstrobe = <390>;
				ti,davinci-cs-wsetup = <96>;
			};

			nand@2,0 {
				compatible = "ti,davinci-nand";
				reg = <2 0x0 0x8000000
					6 0x0 0x100>;
				#address-cells = <1>;
				#size-cells = <1>;
				ti,davinci-chipselect = <0>;
				ti,davinci-mask-ale = <0x2000>;
				ti,davinci-mask-cle = <0x4000>;
				ti,davinci-mask-chipsel = <0>;
				ti,davinci-ecc-mode = "hw";
				ti,davinci-ecc-bits = <4>;
				ti,davinci-nand-use-bbt;
				ti,davinci-no-subpage-write;
				clocks = <&clkaemif>;
				clock-names = "aemif";

				partition@0 {
					label = "u-boot";
					reg = <0x0 0x100000>;
					read-only;
				};

				partition@100000 {
					label = "params";
					reg = <0x100000 0x80000>;
					read-only;
				};

				partition@180000 {
					label = "ubifs";
					reg = <0x180000 0x7e80000>;
				};
			};
		};

		uart0:	serial@2540000 {
			compatible	= "ns16550a";
			current-speed	= <115200>;
			reg-shift	= <2>;
			reg-io-width	= <4>;
			interrupts	= <448 0xf01>;
			reg		= <0x02540000 0x100>;
			clocks		= <&clkuart0>;
		};

		uart1:	serial@2541000 {
			compatible	= "ns16550a";
			current-speed	= <115200>;
			reg-shift	= <2>;
			reg-io-width	= <4>;
			interrupts	= <451 0xf01>;
			reg		= <0x02541000 0x100>;
			clocks		= <&clkuart1>;
		};

		spi0:spi@20BF0000 {
			#address-cells			= <1>;
			#size-cells			= <0>;
			compatible			= "ti,davinci-spi-v1";
			reg				= <0x20BF0000 0x1000>;
			ti,davinci-spi-num-cs		= <4>;
			ti,davinci-spi-intr-line	= <0>;
			interrupts			= <338 0xf01>;
			clocks				= <&clkspi>;

			flash: n25q032@0 {
				#address-cells = <1>;
				#size-cells = <1>;
				compatible = "st,m25p32";
				spi-max-frequency = <25000000>;
				reg = <0>;

				partition@0 {
					label = "u-boot-spl";
					reg = <0x0 0x80000>;
					read-only;
				};

				partition@1 {
					label = "test";
					reg = <0x80000 0x380000>;
				};
			};
		};

		i2c@2530000 {
			compatible = "ti,davinci-i2c";
			reg = <0x02530000 0x1000>;
			clock-frequency = <100000>;
			clocks		= <&clki2c>;
			interrupts = <342 0xf01>;
			interrupt-parent = <&virtintc>;
			#address-cells = <1>;
			#size-cells = <0>;

			dtt@50 {
				compatible = "at,24c1024";
				reg = <0x50>;
			};
		};

		gpio0: gpio@2320000 {
			compatible = "ti,keystone-gpio";
			reg = <0x02320000 0x10
				0x02320010 0x28>;
			gpio-controller;
			#gpio-cells = <2>;
			/* HW Interrupts mapped to GPIO pins */
			interrupts = <289 0xf02 290 0xf02 291 0xf02 292 0xf02 293 0xf02
					294 0xf02 295 0xf02 296 0xf02 297 0xf02 298 0xf02
					299 0xf02 300 0xf02 301 0xf02 302 0xf02 303 0xf02
					304 0xf02 305 0xf02 306 0xf02 307 0xf02 308 0xf02
					309 0xf02 310 0xf02 311 0xf02 312 0xf02 313 0xf02
					314 0xf02 315 0xf02 316 0xf02 317 0xf02 318 0xf02
					319 0xf02 320 0xf02>;
			interrupt-controller;
			#interrupt-cells = <2>;
			clocks = <&clkgpio>;
			clock-names = "gpio";
		};

		ipcgpio0: gpio@2620240 {
			compatible = "ti,keystone-ipc-gpio";
			reg = <0x02620240 4>;
			gpio-controller;
			#gpio-cells = <2>;
		};

		ipcgpio1: gpio@2620244 {
			compatible = "ti,keystone-ipc-gpio";
			reg = <0x02620244 4>;
			gpio-controller;
			#gpio-cells = <2>;
		};

		ipcgpio2: gpio@2620248 {
			compatible = "ti,keystone-ipc-gpio";
			reg = <0x02620248 4>;
			gpio-controller;
			#gpio-cells = <2>;
		};

		ipcgpio3: gpio@262024c {
			compatible = "ti,keystone-ipc-gpio";
			reg = <0x0262024c 4>;
			gpio-controller;
			#gpio-cells = <2>;
		};

		wdt: wdt@2280000 {
			compatible = "ti,davinci-wdt";
			reg = <0x02280000 0x80>;
			clocks = <&clktimer1>;
			clock-names = "watchdog";
		};

		timer: timer@2270000 {
			compatible = "ti,tci6614-timer";
			reg = <0x02270000 0x80>;
			clocks = <&clktimer0>;
			interrupts = <185 0xf02 186 0xf02>;
		};

		pmu {
			compatible = "arm,cortex-a8-pmu";
			interrupts = <3 0xf02>;
		};
	};
};
