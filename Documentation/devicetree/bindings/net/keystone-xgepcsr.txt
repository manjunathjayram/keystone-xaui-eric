This document describes the device tree bindings associated with the
Keystone 10G SerDes to enable either CDFE or 10G-KR firmware.

ref_clock: 	The reference clock rate.
		- 0 -> 156.25MHz
link_rate:	The connection link rate.
		- 0 -> 10.3125GHz
tx_ctrl_override: 5 values to set c1 c2 cm tx_att tx_vreg.
		- default: c1=2 c2=0 cm=2 tx_att=12 tx_vreg=4
equalizer_flags:  3 values for vreg cdfe offset.
		- default: vreg=1 cdfe=1 offset=1
status:		When CDFE and FW nodes exist, set to "ok" or "disable"
		to enable or disable FW.

When the firmware is active the individual lanes can be configured
with the following:

lane:		Lane number.
		- 0 -> Lane 0 (default)
		- 1 -> Lane 1
rate:		Link rate:
		- 0 -> 1G/10G (default)
		- 1 -> Force 1G
		- 2 -> Force 10G
autonegotiate:	Set to enable link rate autonegotiation when rate == 1G/10G.
		- 0 -> disabled (default)
		- 1 -> enabled
tx_pause:	Enable TX pause frame generation.
		- 0 -> disabled (default)
		- 1 -> enabled
rx_pause:	Enable RX pause frame generation.
		- 0 -> disabled (default)
		- 1 -> enabled
10g_train:	Enable 10G link training.
		- 0 -> disabled (default)
		- 1 -> enabled
fec:		Enable Forward Error Correction.
		- 0 -> disabled (default)
		- 1 -> enabled

The entire serdes node needs to be included under the cpswx {} node.

Examples provided below.

CDFE enabled example:
netcpx {
	...
	cpswx {
		...
		serdes {
			ref_clock = <0>;
			link_rate = <0>;

			cdfe-params {
				tx_ctrl_override = <2 0 2 12 4>;
				equalizer_flags = <1 1 1>;
			};
		};
	};
};

10G KR enabled example:
netcpx {
	...
	cpswx {
		...
		serdes {
			ref_clock = <0>;
			link_rate = <0>;

			firmware {
				status = "ok";
				lane-0 {
					status = "ok";
					lane = <0>;
					rate = <0>;
					autonegotiate;
					10g_train;

				};
				lane-1 {
					status = "disabled";
					lane = <1>;
					rate = <0>;
				};
			};
		};
	};
};
